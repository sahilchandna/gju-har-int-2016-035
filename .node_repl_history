} /*End of display() */
    }
        printf("\n");
            printf("%d ", queue_array[i]);
        for (i = front; i <= rear; i++)
        printf("Queue is : \n");
    {
    else
        printf("Queue is empty \n");
    if (front == - 1)
    int i;
{
display()
} /*End of delete() */
    }
        front = front + 1;
        printf("Element deleted from queue is : %d\n", queue_array[front]);
    {
    else
    }
        return ;
        printf("Queue Underflow \n");
    {
    if (front == - 1 || front > rear)
{
delete()
} /*End of insert()*/
    }
        queue_array[rear] = add_item;
        rear = rear + 1;
        scanf("%d", &add_item);
        printf("Inset the element in queue : ");
        front = 0;
        /*If queue is initially empty */
        if (front == - 1)
    {
    else
    printf("Queue Overflow \n");
    if (rear == MAX - 1)
    int add_item;
{
insert()
} /*End of main()*/
    } /*End of while*/
        } /*End of switch*/
            printf("Wrong choice \n");
            default:
            exit(1);
            case 4:
            break;
            display();
            case 3:
            break;
            delete();
            case 2:
            break;
            insert();
            case 1:
        {
        switch (choice)
        scanf("%d", &choice);
        printf("Enter your choice : ");
        printf("4.Quit \n");
        printf("3.Display all elements of queue \n");
        printf("2.Delete element from queue \n");
        printf("1.Insert element to queue \n");
    {
    while (1)
    int choice;
{
main()
int front = - 1;
int rear = - 1;
int queue_array[MAX];
#define MAX 50
#include <stdio.h>
 */
 * C Program to Implement a Queue using an Array
/*